@using CareerExplorer.Core.Entities;
@using CareerExplorer.Shared;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model IEnumerable<Message>
@{
    var jobSeekerInfo = ViewBag.JobSeeker as JobSeeker;
    var recruiterInfo = ViewBag.Recruiter as Recruiter;
}
<div class="row">
    <div class="col-md-6">
        @if(jobSeekerInfo != null)
        {
            <div class="card mb-3" >
              <div class="card-header">
                  <h1 style="font-size:25px;">@jobSeekerInfo.DesiredPosition.Name</h1>
                  <h2 style="font-size:20px;">@jobSeekerInfo.Name @jobSeekerInfo.Surname</h2>
              </div>
              <div class="card-body">
                <p class="card-text">@jobSeekerInfo.Experience</p>
                @if (jobSeekerInfo.Phone != null)
                {
                    <h5><i class="bi bi-telephone-fill"></i>@jobSeekerInfo.Phone</h5>
                }
                @if (jobSeekerInfo.GitHub != null)
                {
                        <a href="@jobSeekerInfo.GitHub"><i class="bi bi-github"></i> @jobSeekerInfo.GitHub</a>
                }
                @if (jobSeekerInfo.LinkedIn != null)
                {
                    <span>LinkedIn</span>
                        <a href="@jobSeekerInfo.LinkedIn"><i class="bi bi-linkedin"></i> @jobSeekerInfo.LinkedIn</a>
                }


                @if (jobSeekerInfo.Country != null && jobSeekerInfo.City != null)
                {
                        <p><i class="bi bi-geo-alt-fill"></i>@jobSeekerInfo.Country.Name, @jobSeekerInfo.City.Name</p>
                }
                else if (jobSeekerInfo.Country != null)
                {
                        <p><i class="bi bi-geo-alt-fill"></i>@jobSeekerInfo.Country.Name</p>

                }
              </div>
            </div>
        }
        else if(recruiterInfo != null)
        {
            <div class="card mb-3">
              <div class="card-header">
                  <h1 style="font-size:25px;">@recruiterInfo.Company</h1>
                  <h2 style="font-size:20px;">@recruiterInfo.Name @recruiterInfo.Surname</h2>
              </div>
              <div class="card-body">
                <p class="card-text">@recruiterInfo.CompanyDescription</p>
              </div>
            </div>
        }
    </div>
    <div class="col-md-6">
        @if(User.IsInRole(UserRoles.Recruiter))
        {
            <button class="btn btn-primary" id="inviteModalBtn">Send invitation link</button>
        }

        <div id="messages">
            @foreach (var message in Model)
            {
                <div class="message @(message.SenderId == ViewBag.SenderId ? "me" : "other")">
                    @message.Text
                </div>
            }
        </div>
        <form id="sendForm" style="position:static;">
            <input class="form-control" style="width:75%;display:inline-block" type="text" id="messageInput"
            placeholder="@Localizer["Message"]"/>
            <button class="btn btn-primary" id="sendButton" type="submit" disabled>@Localizer["Send"]</button>
        </form>
    </div>
</div>
<!-- Modal -->
<div class="modal" id="inviteModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Send Invitation Link</h4>
                <button type="button" id="closeInviteModal" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form method="post" id="inviteForm">
                <div class="modal-body">
                    <input value="@ViewBag.ReceiverId" name="receiverId" hidden />
                    <div class="form-group">
                        <label for="link">Link:</label>
                        <input type="text" class="form-control" id="link" name="meetingLink" required>
                    </div>
                    <div class="form-group">
                        <label for="datetime">Date and Time:</label>
                        <input type="datetime-local" class="form-control" id="datetime" name="Date" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Send</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).on('click', '#inviteModalBtn', function () {
        $('#inviteModal').modal('show');
    });

    $(document).on('submit', '#inviteForm', function (event) {
        event.preventDefault(); 
        var formData = $(this).serialize(); 
        $.ajax({
            url: '/Notifications/CreateNotification',
            type: 'POST',
            data: formData,
            success: function (response) {
                console.log(response);
                $('#inviteModal').modal('hide');
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText);
            }
        });
    });

    $(document).on('click', '#closeInviteModal', function () {
        $('#inviteModal').modal('hide');
    });
    //signalr
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();
    
    document.getElementById("sendForm").addEventListener("submit", event => {
        event.preventDefault();
        const chatId = @ViewBag.ChatId;
        const senderId = "@ViewBag.SenderId";
        const receiverId = "@ViewBag.ReceiverId";
        const content = document.getElementById("messageInput").value;
        document.getElementById("messageInput").value = "";
        connection.invoke("SendMessage", chatId, senderId, receiverId, content)
         .catch(function (err) {
                    return console.error(err.toString());
         });
    });
    const viewSenderId = "@ViewBag.SenderId";

    connection.on("ReceiveMessage", function (messageText, senderId) {
        var div = document.createElement("div");
        div.textContent = messageText;
        if (senderId === viewSenderId) {
            $(div).addClass("message me");
        }
        else {
            $(div).addClass("message other");
        }
        document.getElementById("messages").appendChild(div);
    });
   
    connection.start()
        .then(function () {
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
        return console.error(err.toString());
    });

   
</script>
<style>
    #messages {
        height: 70%;
        height:30em;
        overflow-y: scroll;
        padding: 10px;
    }

    .message {
        display: block;
        background-color: #fff;
        border-radius:7%;
        padding: 10px;
        margin-bottom: 5px;
    }

        .message.me {
            float: right;
            margin-left:48%;
            background-color: #000;
            color: #fff;
        }

        .message.other {
            float: left;
            margin-right: 48%;
            color: #fff;
            background-color: #343a40;
        }
</style>