@using Microsoft.AspNetCore.Mvc.Localization
@using CareerExplorer.Core.Enums;

@model CareerExplorer.Web.DTO.CreateVacancyDTO
@inject IViewLocalizer Localizer
<form method="post">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class=" text-primary">
                @Localizer["Header"]
            </h2>
            <hr />
        </div>
        <input class="form-control" type="text" id="searchInput">
        <input type="text" id="searchInputForId" name="position" hidden>
        <div class="mt-3" id="searchResults"></div>
        <div class=" mb-3">
            <label asp-for="Description">@Localizer["Description"]</label>
            <textarea rows="7" asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-floating mb-3 input-group" id="skill-tags-input-container">
            <input type="hidden" id="selected-skills-input" name="selectedSkills" />
            <input class="form-control" id="skill-tags-input" placeholder="@Localizer["Choose skills"]" />
            <label class="form-label">@Localizer["Skills"]</label>
        </div>
        <div class="mb-3 skill-tags-display" id="skill-tags-display"></div>
        <div class="form-group">
            <label asp-for="Salary" class="form-label mt-4">@Localizer["Salary"]</label>
            <div class="input-group mb-3">
                <span class="input-group-text">$</span>
                <input asp-for="Salary" type="text" class="form-control" aria-label="Amount (to the nearest dollar)">
                <span class="input-group-text">.00</span>

            </div>
            <span asp-validation-for="Salary" class="text-danger"></span>
        </div>
        <fieldset class="form-group mb-3">
            <legend class="mt-4">@Localizer["English level"]</legend>
            <div class="form-check">
                <input asp-for="@Model.EnglishLevel" class="form-check-input" type="radio"
                       value=@((int)EnglishLevel.NoEnglish) checked="">
                <label class="form-check-label" for="optionsRadios1">
                    No English
                </label>
            </div>
            <div class="form-check">
                <input asp-for="@Model.EnglishLevel" class="form-check-input" type="radio" value=@((int)EnglishLevel.Beginner)>
                <label class="form-check-label" for="optionsRadios2">
                    Beginner/Elementary
                </label>
            </div>
            <div class="form-check disabled">
                <input asp-for="@Model.EnglishLevel" class="form-check-input" type="radio" value=@((int)EnglishLevel.PreIntermediate)>
                <label class="form-check-label" for="optionsRadios3">
                    Pre-Intermediate
                </label>
            </div>
            <div class="form-check disabled">
                <input asp-for="@Model.EnglishLevel" class="form-check-input" type="radio" value=@((int)EnglishLevel.Intermediate)>
                <label class="form-check-label" for="optionsRadios3">
                    Intermediate
                </label>
            </div>
            <div class="form-check disabled">
                <input asp-for="@Model.EnglishLevel" class="form-check-input" type="radio" value=@((int)EnglishLevel.UpperIntermediate)>
                <label class="form-check-label" for="optionsRadios3">
                    Upper-Intermediate
                </label>
            </div>
            <div class="form-check disabled">
                <input asp-for="@Model.EnglishLevel" class="form-check-input" type="radio" value=@((int)EnglishLevel.Advanced)>
                <label class="form-check-label" for="optionsRadios3">
                    Advanced/Fluent
                </label>
            </div>
        </fieldset>
       
        <fieldset class="form-group">
            <label asp-for="ExperienceYears" class="form-label">@Localizer["Years of Experience"]: <span style="font-size:20px;font-weight:bold;" id="range-value">0</span></label>
            <input asp-for="ExperienceYears" type="range" class="form-range" min="0" max="6" step="1" oninput="updateValue(this.value)">
        </fieldset>
        @* WorkType*@
        <fieldset class="form-group mb-3">
            <legend class="mt-4">@Localizer["Work Location"]</legend>
            <div class="form-check">
                <input asp-for="@Model.WorkType" class="form-check-input" type="radio"
                       value=@((int)WorkType.Remote) checked="">
                <label class="form-check-label" for="optionsRadios1">
                    Remote
                </label>
            </div>
            <div class="form-check">
                <input asp-for="@Model.WorkType" class="form-check-input" type="radio" value=@((int)WorkType.OfficeRemote)>
                <label class="form-check-label" for="optionsRadios2">
                    Office/Remote
                </label>
            </div>
            <div class="form-check disabled">
                <input asp-for="@Model.WorkType" class="form-check-input" type="radio" value=@((int)WorkType.Office)>
                <label class="form-check-label" for="optionsRadios3">
                    Office
                </label>
            </div>
        </fieldset>
        @*Country*@
        <div class="mb-3">
            <input asp-for="CountryId" id="countriesId" hidden />
            <label>@Localizer["Country"]</label>
            <input type="text" class="form-control mb-3" id="countries" placeholder="Choose country" />
            <div class="mt-3" id="searchCountryResults"></div>
        </div>
        @*City*@
        <div class="mb-3">
            <input asp-for="CityId" id="citiesId" hidden />
            <label>@Localizer["City"]</label>
            <input type="text" class="form-control mb-3" id="cities" placeholder="Choose city" />
            <div id="searchCityResults"></div>
        </div>
        <div>
            <label >
                <input class="form-check-input" type="radio" asp-for="IsAvailable" value="true" />
                @Localizer["Available"]
            </label>
            <label >
                <input class="form-check-input" type="radio" asp-for="IsAvailable" value="false" />
                @Localizer["Not Available"]
            </label>
        </div>
        
        <button type="submit" class="btn btn-primary" style="width:150px">@Localizer["Create"]</button>
        <a asp-controller="Vacancy" asp-action="CreatedVacancies" class="btn btn-secondary" style="width:150px">
            @Localizer["Back To List"]
        </a>
    </div>
</form>
<style>
    .close {
        border: none;
    }
</style>
@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
    <script>
        //experience range
        function updateValue(val) {
            document.getElementById('range-value').innerHTML = val == 6 ? '>6' : val;
        }
        //skill tags
        var selectedTags = [];
        $(document).ready(function () {
            selectedTags = [];
            updateSkillTagsDisplay();
        });
        $('#skill-tags-input').on('input', function () {
            var search = $(this).val();
            $.ajax({
                url: '/Admin/GetSkillTags',
                type: 'GET',
                data: { search: search },
                success: function (data) {
                    var tags = data.map(function (tag) {
                        return tag.title;
                    });
                    $('#skill-tags-input').autocomplete({
                        source: tags,
                        minLength: 1,
                        select: function (event, ui) {
                            selectedTags.push(ui.item.value);
                            updateSkillTagsDisplay();
                            $(this).val('');
                            return false;
                        }
                    });
                },
                error: function () {
                    console.log('Error retrieving tags');
                }
            });
        });

        function updateSkillTagsDisplay() {
            $('#skill-tags-display').empty();
            for (var i = 0; i < selectedTags.length; i++) {
                var tag = $('<div>', { class: 'skill-tag' }).text(selectedTags[i]);
                var closeButton = $('<button>', { type: 'button', class: 'close', 'aria-label': 'Close' });
                var closeIcon = $('<span>', { 'aria-hidden': 'true' }).html('&times;');
                closeButton.append(closeIcon);
                tag.append(closeButton);
                closeButton.on('click', function () {
                    var index = $(this).parent().index();
                    selectedTags.splice(index, 1);
                    updateSkillTagsDisplay();
                    var skills = JSON.parse($('#selected-skills-input').val());
                    var skillIndex = skills.indexOf(tagText);
                    if (skillIndex > -1) {
                        skills.splice(skillIndex, 1);
                        $('#selected-skills-input').val(JSON.stringify(skills));
                    }
                    $(this).parent().remove();
                });
                $('#skill-tags-display').append(tag);
            }
            $('#selected-skills-input').val(JSON.stringify(selectedTags));
        }
        //position
        $(function() {
            $('#searchInput').on('input', function() {
                var search = $(this).val();
                $.get('/Vacancy/Search',
                { search: search },
                function (results) {
                    var $searchResults = $('#searchResults');
                    $searchResults.empty();
                    $.each(results, function(index, value) {
                        console.log(index , "index");
                        console.log(value.name, "value");
                      var $option = $('<div>').text(value.name);
                        $option.val(value.id);
                        console.log($option);
                      $searchResults.append($option);
                    });
                    $searchResults.show();
                });
            });

            $('#searchResults').on('click', 'div', function() {
                var value = $(this).text();
                var ind = $(this).val();
                $('#searchInput').val(value);
                $('#searchInputForId').val(ind);
                $('#searchResults').hide();
            });
        });
        //country
        $(function () {
            $('#countries').on('input', function () {
                var search = $(this).val();

                $.get('/JobSeekerProfile/CountriesSearch',
                    { search: search },
                    function (results) {
                        console.log(results);
                        var $searchResults = $('#searchCountryResults');
                        $searchResults.empty();
                        $.each(results, function (index, value) {
                            var $option = $('<div>').text(value.name);
                            $option.val(value.id);
                            $searchResults.append($option);
                        });
                        $searchResults.show();
                    });
            });

            $('#searchCountryResults').on('click', 'div', function () {
                var value = $(this).text();
                var ind = $(this).val();
                $('#countries').val(value);
                $('#countriesId').val(ind);
                $('#searchCountryResults').hide();
            });
        });
        //city
        $(function () {
            $('#cities').on('input', function () {
                var search = $(this).val();
                var countryId = $('#countriesId').val();
                $.get('/JobSeekerProfile/CitiesSearch',
                    { search: search, countryId: countryId },
                    function (results) {
                        var $searchResults = $('#searchCityResults');
                        $searchResults.empty();
                        $.each(results, function (index, value) {
                            var $option = $('<div>').text(value.name);
                            $option.val(value.id);
                            $searchResults.append($option);
                        });
                        $searchResults.show();
                    });
            });

            $('#searchCityResults').on('click', 'div', function () {
                var value = $(this).text();
                var ind = $(this).val();
                $('#cities').val(value);
                $('#citiesId').val(ind);
                $('#searchCityResults').hide();
            });
        });
    </script>

}
